{"version":3,"file":"static/js/516.9482fa14.chunk.js","mappings":"wNAEaA,EAAS,WACpB,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,SAAC,UACjE,E,kBCCAC,EAAAA,EAAMC,SAASC,QAFE,8CAQV,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKtB,OAJKL,EAAS,CAGb,EACDG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBd,EAAAA,EAAMe,IAAI,QAASN,GAAQ,KAAD,EAAnC,OAARC,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SAEPP,EAASQ,MAAI,OAAAN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBQ,EAAAA,OAAOC,QAAQT,EAAAO,GAAMG,SAAS,yBAAAV,EAAAW,OAAA,GAAAf,EAAA,kBAEjC,kBAdqB,OAAAJ,EAAAoB,MAAA,KAAAC,UAAA,KCsCtB,EA3CgB,SAAHrB,GAAuC,IAAjCsB,EAAStB,EAATsB,UAAWC,EAAcvB,EAAduB,eAC5BC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAsCL,EAAAA,EAAAA,UAHnB,GAGyCM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAGvB,OAHuBA,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACY,OADZF,EAAAO,GACEc,EAAUrB,EAAAE,KAAA,EAAOX,IAAW,OAAAS,EAAAgC,GAAAhC,EAAAI,MAAA,EAAAJ,EAAAO,IAAAP,EAAAgC,IAC5BH,EAAaT,EAAQa,QAAQ,wBAAAjC,EAAAW,OAAA,GAAAf,EAAA,MAC9BgB,MAAA,KAAAC,UAAA,EAJc,WACSkB,EAAAnB,MAAC,KAADC,UAAA,CAIxBqB,EACF,GAAG,CAACd,EAAQa,SAYZ,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAjD,SAAA,EACEF,EAAAA,EAAAA,KAACD,EAAM,KACPC,EAAAA,EAAAA,KAACoD,EAAAA,GAAQ,CACPC,KAAMlB,EAAQmB,MAAM,EAAGf,GACvBV,UAAWA,EACXC,eAAgBA,IAEjBS,EAAcI,IACb3C,EAAAA,EAAAA,KAAA,UACEC,UAAU,uEACVsD,QArBS,WACf,IAAMC,EAAkBjB,EAAc,EAGpCC,EADEgB,GAAmBb,EACNa,EAEAb,EAEnB,EAa0BzC,SACnB,gBAMT,C","sources":["components/Filter.jsx","services/api.js","pages/Catalog.jsx"],"sourcesContent":["import React from 'react';\n\nexport const Filter = () => {\n  return <div className=\"mx-auto w-[859px] h-[74px] bg-gray-400\">Filter</div>;\n};\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst BASE_URL = 'https://6504a775c8869921ae254d5c.mockapi.io';\n\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.params = {\n//   include_adult: 'false',\n//   language: 'en-US',\n// };\n\nexport const fetchCars = async () => {\n  const config = {\n    // params: {\n    //   page: page,\n    // },\n  };\n\n  try {\n    const response = await axios.get(`/cars`, config);\n    // console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    Notify.failure(error.message);\n  }\n};\n","import { CarsList } from 'components';\nimport { Filter } from 'components/Filter';\nimport React, { useEffect, useState } from 'react';\nimport { fetchCars } from 'services/api';\n\nconst numberOfCars = 8;\nconst Catalog = ({ favorites, toggleFavorite }) => {\n  const [allCars, setAllCars] = useState([]);\n  const [visibleCars, setVisibleCars] = useState(numberOfCars);\n  const [totalCars, setTotalCars] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      setAllCars(await fetchCars());\n      setTotalCars(allCars.length);\n    }\n    fetchData();\n  }, [allCars.length]);\n\n  const loadMore = () => {\n    const nextVisibleCars = visibleCars + 8;\n\n    if (nextVisibleCars <= totalCars) {\n      setVisibleCars(nextVisibleCars);\n    } else {\n      setVisibleCars(totalCars);\n    }\n  };\n\n  return (\n    <>\n      <Filter />\n      <CarsList\n        cars={allCars.slice(0, visibleCars)}\n        favorites={favorites}\n        toggleFavorite={toggleFavorite}\n      />\n      {visibleCars < totalCars && (\n        <button\n          className=\"ml-auto mr-auto block mb-[150px] text-blue-500 text-base font-medium\"\n          onClick={loadMore}\n        >\n          Load more\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["Filter","_jsx","className","children","axios","defaults","baseURL","fetchCars","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_context","prev","next","get","sent","abrupt","data","t0","Notify","failure","message","stop","apply","arguments","favorites","toggleFavorite","_useState","useState","_useState2","_slicedToArray","allCars","setAllCars","_useState3","_useState4","visibleCars","setVisibleCars","_useState5","_useState6","totalCars","setTotalCars","useEffect","_fetchData","t1","length","fetchData","_jsxs","_Fragment","CarsList","cars","slice","onClick","nextVisibleCars"],"sourceRoot":""}